# golangci-lint v2.x configuration
version: "2"

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly
  allow-parallel-runners: true

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  cyclop:
    max-complexity: 10
  decorder:
    dec-order:
      - const
      - var
      - type
      - func
    disable-dec-order-check: false
  dupl:
    threshold: 100
  exhaustive:
    check-generated: false
    default-signifies-exhaustive: false
  funlen:
    lines: 60
    statements: 40
  gocognit:
    min-complexity: 15
  gocyclo:
    min-complexity: 10
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
      - experimental
    disabled-checks:
      - unnamedResult
      - hugeParam
      - paramTypeCombine
  godot:
    capital: true
  godox:
    keywords:
      - FIXME
      - BUG
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G304
  govet:
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  grouper:
    const-require-single-const: true
    var-require-single-var: true
  importas:
    no-unaliased: true
    alias:
      - pkg: "go/ast"
        alias: goast
  ireturn:
    allow:
      - anon
      - error
      - empty
      - stdlib
      - generic
  lll:
    line-length: 120
  maintidx:
    under: 20
  misspell:
    locale: US
  mnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '3'
      - '10'
      - '100'
      - '1000'
      - '0644'
      - '0755'
  nakedret:
    max-func-lines: 30
  nestif:
    min-complexity: 4
  nilnil:
    checked-types:
      - ptr
      - func
      - iface
      - map
      - chan
  nlreturn:
    block-size: 2
  nolintlint:
    allow-unused: false
    require-explanation: true
    require-specific: true
  perfsprint:
    err-error: true
    errorf: true
    sprintf1: true
    strconcat: true
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
  predeclared:
    ignore: ""
    q: false
  revive:
    severity: error
    enable-all-rules: false
    rules:
      - name: exported
        severity: warning
        disabled: false
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"
  staticcheck:
    checks: ["all"]
  stylecheck:
    checks: ["all"]
  tagalign:
    align: true
    sort: true
  tagliatelle:
    case:
      rules:
        json: snake
        yaml: snake
        xml: snake
        bson: snake
        avro: snake
        mapstructure: snake
  testpackage:
    skip-regexp: "(export|internal)_test\\.go"
  thelper:
    test:
      first: true
      name: true
      begin: true
    benchmark:
      first: true
      name: true
      begin: true
  unparam:
    check-exported: false
  usestdlibvars:
    time-month: true
    time-layout: true
    crypto-hash: true
    default-rpc-path: true
  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-case-trailing-whitespace: true
    allow-cuddle-declarations: false

linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - fatcontext
    - forbidigo
    - forcetypeassert
    - funlen
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - govet
    - grouper
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - staticcheck
    - tagalign
    - tagliatelle
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint

formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/paveg/similarity-go)
    gofumpt:
      extra-rules: true

issues:
  exclude-use-default: true
  exclude:
    - "SA9003:"
    - "SA1019: .* is deprecated"
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print.*|os\\.(Un)?Setenv). is not checked"
  exclude-rules:
    - path: _test\.go
      linters:
        - mnd
        - funlen
        - gochecknoinits
        - maintidx
        - gocognit
        - testpackage
        - wrapcheck
    - path: testdata/
      linters:
        - errcheck
        - gosec
        - revive
        - stylecheck
    - path: cmd/
      linters:
        - gochecknoinits
        - wrapcheck
    - text: "package comment should be of the form"
      linters:
        - revive
    - text: "ST1000:"
      linters:
        - stylecheck
    - text: "exported .* should have comment"
      linters:
        - revive
    - text: "should have a package comment"
      linters:
        - stylecheck
    - text: "G304:"
      linters:
        - gosec
    - source: "^\\s*//\\s*(TODO|FIXME|BUG)"
      linters:
        - godox
  max-issues-per-linter: 50
  max-same-issues: 10
  new: false
  new-from-rev: ""
  new-from-patch: ""
  whole-files: false
  fix: false
